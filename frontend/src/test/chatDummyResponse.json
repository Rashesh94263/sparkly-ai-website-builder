{
    "response": "I'll create a comprehensive gym application with a beautiful UI that's production-ready. This will include member tracking, workout plans, class scheduling, and progress tracking.\n\n<boltArtifact id=\"gym-application\" title=\"Modern Gym Application\">\n<boltAction type=\"shell\">\nnpm install react-router-dom framer-motion\n</boltAction>\n\n<boltAction type=\"file\" filePath=\"src/types/index.ts\">\nexport interface Workout {\n  id: string;\n  name: string;\n  description: string;\n  duration: number;\n  difficulty: 'beginner' | 'intermediate' | 'advanced';\n  targetMuscles: string[];\n  imageUrl: string;\n}\n\nexport interface ClassSchedule {\n  id: string;\n  name: string;\n  instructor: string;\n  time: string;\n  day: string;\n  duration: number;\n  maxCapacity: number;\n  currentAttendees: number;\n  description: string;\n  imageUrl: string;\n}\n\nexport interface UserProgress {\n  date: string;\n  weight: number;\n  bodyFat?: number;\n  completedWorkouts: number;\n}\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  membership: 'basic' | 'premium' | 'elite';\n  joinDate: string;\n  progress: UserProgress[];\n  favoriteWorkouts: string[];\n}\n</boltAction>\n\n<boltAction type=\"file\" filePath=\"src/data/mockData.ts\">\nimport { Workout, ClassSchedule, User } from '../types';\n\nexport const workouts: Workout[] = [\n  {\n    id: '1',\n    name: 'Full Body Blast',\n    description: 'A comprehensive workout targeting all major muscle groups for a complete body transformation.',\n    duration: 45,\n    difficulty: 'intermediate',\n    targetMuscles: ['chest', 'back', 'legs', 'arms', 'core'],\n    imageUrl: 'https://images.unsplash.com/photo-1517836357463-d25dfeac3438?auto=format&fit=crop&q=80'\n  },\n  {\n    id: '2',\n    name: 'Core Crusher',\n    description: 'Focused on strengthening your abdominal muscles and improving overall core stability.',\n    duration: 30,\n    difficulty: 'beginner',\n    targetMuscles: ['abs', 'obliques', 'lower back'],\n    imageUrl: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&q=80'\n  },\n  {\n    id: '3',\n    name: 'Power Lifting',\n    description: 'Heavy compound movements to build strength and power in major muscle groups.',\n    duration: 60,\n    difficulty: 'advanced',\n    targetMuscles: ['chest', 'back', 'legs'],\n    imageUrl: 'https://images.unsplash.com/photo-1541534741688-6078c6bfb5c5?auto=format&fit=crop&q=80'\n  },\n  {\n    id: '4',\n    name: 'HIIT Cardio',\n    description: 'High-intensity interval training to maximize calorie burn and improve cardiovascular health.',\n    duration: 25,\n    difficulty: 'intermediate',\n    targetMuscles: ['full body', 'cardio'],\n    imageUrl: 'https://images.unsplash.com/photo-1434682881908-b43d0467b798?auto=format&fit=crop&q=80'\n  },\n  {\n    id: '5',\n    name: 'Yoga Flow',\n    description: 'Improve flexibility, balance and mental clarity with this calming yet challenging yoga sequence.',\n    duration: 50,\n    difficulty: 'beginner',\n    targetMuscles: ['full body', 'flexibility'],\n    imageUrl: 'https://images.unsplash.com/photo-1575052814086-f385e2e2ad1b?auto=format&fit=crop&q=80'\n  }\n];\n\nexport const classSchedule: ClassSchedule[] = [\n  {\n    id: '1',\n    name: 'Morning Yoga',\n    instructor: 'Sarah Chen',\n    time: '07:00',\n    day: 'Monday',\n    duration: 60,\n    maxCapacity: 20,\n    currentAttendees: 15,\n    description: 'Start your day with energizing poses and mindful breathing.',\n    imageUrl: 'https://images.unsplash.com/photo-1599447292461-58e3c6610e84?auto=format&fit=crop&q=80'\n  },\n  {\n    id: '2',\n    name: 'Spinning',\n    instructor: 'Michael Johnson',\n    time: '18:00',\n    day: 'Tuesday',\n    duration: 45,\n    maxCapacity: 15,\n    currentAttendees: 12,\n    description: 'High-energy indoor cycling class set to motivating music.',\n    imageUrl: 'https://images.unsplash.com/photo-1534787238916-9ba6764efd4f?auto=format&fit=crop&q=80'\n  },\n  {\n    id: '3',\n    name: 'Body Pump',\n    instructor: 'Jason Smith',\n    time: '19:00',\n    day: 'Wednesday',\n    duration: 50,\n    maxCapacity: 25,\n    currentAttendees: 18,\n    description: 'Barbell workout that strengthens your entire body.',\n    imageUrl: 'https://images.unsplash.com/photo-1581009146145-b5ef050c2e1e?auto=format&fit=crop&q=80'\n  },\n  {\n    id: '4',\n    name: 'Zumba',\n    instructor: 'Maria Rodriguez',\n    time: '17:30',\n    day: 'Thursday',\n    duration: 60,\n    maxCapacity: 30,\n    currentAttendees: 25,\n    description: 'Dance-based fitness class featuring Latin and international music.',\n    imageUrl: 'https://images.unsplash.com/photo-1523731407965-2430cd12f5e4?auto=format&fit=crop&q=80'\n  },\n  {\n    id: '5',\n    name: 'HIIT Circuit',\n    instructor: 'David Wilson',\n    time: '08:00',\n    day: 'Friday',\n    duration: 45,\n    maxCapacity: 20,\n    currentAttendees: 16,\n    description: 'Fast-paced workout alternating between intense bursts of exercise and short recovery periods.',\n    imageUrl: 'https://images.unsplash.com/photo-1518644961665-ed172691aaa1?auto=format&fit=crop&q=80'\n  }\n];\n\nexport const userData: User = {\n  id: '1',\n  name: 'Alex Morgan',\n  email: 'alex@example.com',\n  membership: 'premium',\n  joinDate: '2023-01-15',\n  progress: [\n    { date: '2023-08-01', weight: 75, bodyFat: 22, completedWorkouts: 12 },\n    { date: '2023-09-01', weight: 73, bodyFat: 21, completedWorkouts: 15 },\n    { date: '2023-10-01', weight: 72, bodyFat: 20, completedWorkouts: 18 },\n    { date: '2023-11-01', weight: 70, bodyFat: 19, completedWorkouts: 22 }\n  ],\n  favoriteWorkouts: ['1', '3', '5']\n};\n</boltAction>\n\n<boltAction type=\"file\" filePath=\"src/components/Navbar.tsx\">\nimport React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Menu, X, Dumbbell, User, Calendar, LineChart, Home } from 'lucide-react';\n\nconst Navbar: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const location = useLocation();\n\n  const navigation = [\n    { name: 'Home', href: '/', icon: Home },\n    { name: 'Workouts', href: '/workouts', icon: Dumbbell },\n    { name: 'Classes', href: '/classes', icon: Calendar },\n    { name: 'Progress', href: '/progress', icon: LineChart },\n    { name: 'Profile', href: '/profile', icon: User },\n  ];\n\n  const toggleMenu = () => setIsOpen(!isOpen);\n\n  return (\n    <nav className=\"bg-gray-900 text-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          <div className=\"flex items-center\">\n            <Link to=\"/\" className=\"flex-shrink-0 flex items-center\">\n              <Dumbbell className=\"h-8 w-8 text-indigo-500\" />\n              <span className=\"ml-2 text-xl font-bold\">FitFlex</span>\n            </Link>\n          </div>\n          <div className=\"hidden md:block\">\n            <div className=\"ml-10 flex items-baseline space-x-4\">\n              {navigation.map((item) => {\n                const isActive = location.pathname === item.href;\n                return (\n                  <Link\n                    key={item.name}\n                    to={item.href}\n                    className={`px-3 py-2 rounded-md text-sm font-medium flex items-center transition-colors ${\n                      isActive\n                        ? 'bg-indigo-800 text-white'\n                        : 'text-gray-300 hover:bg-gray-700 hover:text-white'\n                    }`}\n                  >\n                    <item.icon className=\"h-4 w-4 mr-1\" />\n                    {item.name}\n                  </Link>\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"md:hidden\">\n            <button\n              onClick={toggleMenu}\n              className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none\"\n            >\n              {isOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile menu */}\n      {isOpen && (\n        <div className=\"md:hidden\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n            {navigation.map((item) => {\n              const isActive = location.pathname === item.href;\n              return (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={`block px-3 py-2 rounded-md text-base font-medium flex items-center ${\n                    isActive\n                      ? 'bg-indigo-800 text-white'\n                      : 'text-gray-300 hover:bg-gray-700 hover:text-white'\n                  }`}\n                  onClick={() => setIsOpen(false)}\n                >\n                  <item.icon className=\"h-5 w-5 mr-2\" />\n                  {item.name}\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default Navbar;\n</boltAction>\n\n<boltAction type=\"file\" filePath=\"src/components/Footer.tsx\">\nimport React from 'react';\nimport { Dumbbell, Mail, Phone, MapPin, Instagram, Facebook, Twitter } from 'lucide-react';\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"bg-gray-900 text-white\">\n      <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          <div>\n            <div className=\"flex items-center\">\n              <Dumbbell className=\"h-8 w-8 text-indigo-500\" />\n              <span className=\"ml-2 text-xl font-bold\">FitFlex</span>\n            </div>\n            <p className=\"mt-2 text-sm text-gray-400\">\n              Transforming lives through fitness and wellness since 2010.\n            </p>\n            <div className=\"flex space-x-4 mt-4\">\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                <Instagram className=\"h-5 w-5\" />\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                <Facebook className=\"h-5 w-5\" />\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                <Twitter className=\"h-5 w-5\" />\n              </a>\n            </div>\n          </div>\n          \n          <div>\n            <h3 className=\"text-sm font-semibold uppercase tracking-wider\">Quick Links</h3>\n            <ul className=\"mt-4 space-y-2\">\n              <li><a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">About Us</a></li>\n              <li><a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">Membership Plans</a></li>\n              <li><a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">Trainers</a></li>\n              <li><a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">Blog</a></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h3 className=\"text-sm font-semibold uppercase tracking-wider\">Policies</h3>\n            <ul className=\"mt-4 space-y-2\">\n              <li><a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">Terms of Service</a></li>\n              <li><a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">Privacy Policy</a></li>\n              <li><a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">Refund Policy</a></li>\n              <li><a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">FAQ</a></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h3 className=\"text-sm font-semibold uppercase tracking-wider\">Contact Us</h3>\n            <ul className=\"mt-4 space-y-2\">\n              <li className=\"flex items-center text-gray-400\">\n                <MapPin className=\"h-5 w-5 mr-2 text-indigo-500\" />\n                123 Fitness Ave, Healthville\n              </li>\n              <li className=\"flex items-center text-gray-400\">\n                <Phone className=\"h-5 w-5 mr-2 text-indigo-500\" />\n                (555) 123-4567\n              </li>\n              <li className=\"flex items-center text-gray-400\">\n                <Mail className=\"h-5 w-5 mr-2 text-indigo-500\" />\n                info@fitflex.com\n              </li>\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"mt-8 pt-8 border-t border-gray-700\">\n          <p className=\"text-gray-400 text-sm text-center\">\n            &copy; {new Date().getFullYear()} FitFlex Gym. All rights reserved.\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n</boltAction>\n\n<boltAction type=\"file\" filePath=\"src/components/WorkoutCard.tsx\">\nimport React from 'react';\nimport { Clock, Dumbbell, Bookmark } from 'lucide-react';\nimport { Workout } from '../types';\n\ninterface WorkoutCardProps {\n  workout: Workout;\n  isFavorite?: boolean;\n  onToggleFavorite?: (id: string) => void;\n}\n\nconst WorkoutCard: React.FC<WorkoutCardProps> = ({ workout, isFavorite = false, onToggleFavorite }) => {\n  const difficultyColor = {\n    beginner: 'bg-green-100 text-green-800',\n    intermediate: 'bg-yellow-100 text-yellow-800',\n    advanced: 'bg-red-100 text-red-800',\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden transition-transform hover:scale-[1.02] hover:shadow-lg\">\n      <div className=\"h-48 overflow-hidden relative\">\n        <img \n          src={workout.imageUrl} \n          alt={workout.name} \n          className=\"w-full h-full object-cover\"\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 to-transparent\"></div>\n        <div className=\"absolute bottom-0 left-0 p-4 w-full\">\n          <h3 className=\"text-xl font-bold text-white\">{workout.name}</h3>\n          <div className=\"flex items-center mt-1\">\n            <span className={`text-xs px-2 py-1 rounded-full ${difficultyColor[workout.difficulty]}`}>\n              {workout.difficulty.charAt(0).toUpperCase() + workout.difficulty.slice(1)}\n            </span>\n            <div className=\"flex items-center ml-2 text-white text-sm\">\n              <Clock className=\"h-4 w-4 mr-1\" />\n              {workout.duration} min\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"p-4\">\n        <p className=\"text-gray-600 text-sm mb-4\">{workout.description}</p>\n        <div className=\"flex flex-wrap gap-1 mb-4\">\n          {workout.targetMuscles.map((muscle) => (\n            <span key={muscle} className=\"bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded-full\">\n              {muscle}\n            </span>\n          ))}\n        </div>\n        <div className=\"flex justify-between items-center\">\n          <button className=\"bg-indigo-600 text-white px-4 py-2 rounded-md flex items-center text-sm font-medium hover:bg-indigo-700 transition-colors\">\n            <Dumbbell className=\"h-4 w-4 mr-1\" />\n            Start Workout\n          </button>\n          {onToggleFavorite && (\n            <button \n              onClick={() => onToggleFavorite(workout.id)}\n              className=\"p-2 rounded-full hover:bg-gray-100 transition-colors\"\n            >\n              <Bookmark \n                className={`h-5 w-5 ${isFavorite ? 'fill-yellow-500 text-yellow-500' : 'text-gray-400'}`} \n              />\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkoutCard;\n</boltAction>\n\n<boltAction type=\"file\" filePath=\"src/components/ClassCard.tsx\">\nimport React from 'react';\nimport { Clock, User, Calendar } from 'lucide-react';\nimport { ClassSchedule } from '../types';\n\ninterface ClassCardProps {\n  classInfo: ClassSchedule;\n  onBook?: (id: string) => void;\n}\n\nconst ClassCard: React.FC<ClassCardProps> = ({ classInfo, onBook }) => {\n  const availableSpots = classInfo.maxCapacity - classInfo.currentAttendees;\n  const isAlmostFull = availableSpots <= 3;\n  const isFull = availableSpots === 0;\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden transition-transform hover:scale-[1.02] hover:shadow-lg\">\n      <div className=\"h-48 overflow-hidden relative\">\n        <img \n          src={classInfo.imageUrl} \n          alt={classInfo.name} \n          className=\"w-full h-full object-cover\"\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 to-transparent\"></div>\n        <div className=\"absolute bottom-0 left-0 p-4 w-full\">\n          <h3 className=\"text-xl font-bold text-white\">{classInfo.name}</h3>\n          <p className=\"text-white text-sm\">with {classInfo.instructor}</p>\n        </div>\n      </div>\n      <div className=\"p-4\">\n        <div className=\"flex flex-wrap gap-4 mb-4\">\n          <div className=\"flex items-center text-sm text-gray-600\">\n            <Calendar className=\"h-4 w-4 mr-1 text-indigo-500\" />\n            {classInfo.day}\n          </div>\n          <div className=\"flex items-center text-sm text-gray-600\">\n            <Clock className=\"h-4 w-4 mr-1 text-indigo-500\" />\n            {classInfo.time} ({classInfo.duration} min)\n          </div>\n          <div className=\"flex items-center text-sm text-gray-600\">\n            <User className=\"h-4 w-4 mr-1 text-indigo-500\" />\n            {isFull ? (\n              <span className=\"text-red-600 font-medium\">Class Full</span>\n            ) : (\n              <span className={isAlmostFull ? \"text-orange-600 font-medium\" : \"\"}>\n                {availableSpots} spots left\n              </span>\n            )}\n          </div>\n        </div>\n        <p className=\"text-gray-600 text-sm mb-4\">{classInfo.description}</p>\n        <button \n          onClick={() => onBook && onBook(classInfo.id)}\n          disabled={isFull}\n          className={`w-full py-2 rounded-md flex items-center justify-center text-sm font-medium transition-colors ${\n            isFull \n              ? 'bg-gray-200 text-gray-500 cursor-not-allowed' \n              : 'bg-indigo-600 text-white hover:bg-indigo-700'\n          }`}\n        >\n          {isFull ? 'Class Full' : 'Book Class'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ClassCard;\n</boltAction>\n\n<boltAction type=\"file\" filePath=\"src/components/ProgressChart.tsx\">\nimport React from 'react';\nimport { UserProgress } from '../types';\n\ninterface ProgressChartProps {\n  progress: UserProgress[];\n  type: 'weight' | 'workouts' | 'bodyFat';\n}\n\nconst ProgressChart: React.FC<ProgressChartProps> = ({ progress, type }) => {\n  // Sort progress by date\n  const sortedProgress = [...progress].sort((a, b) => \n    new Date(a.date).getTime() - new Date(b.date).getTime()\n  );\n\n  // Get data based on type\n  const data = sortedProgress.map(p => {\n    if (type === 'weight') return p.weight;\n    if (type === 'bodyFat') return p.bodyFat || 0;\n    return p.completedWorkouts;\n  });\n\n  // Get labels (months)\n  const labels = sortedProgress.map(p => {\n    const date = new Date(p.date);\n    return date.toLocaleString('default', { month: 'short' });\n  });\n\n  // Find min and max for scaling\n  const max = Math.max(...data) * 1.1;\n  const min = type === 'workouts' ? 0 : Math.min(...data) * 0.9;\n  \n  // Chart height and scaling\n  const chartHeight = 200;\n  const scale = (value: number) => {\n    return chartHeight - ((value - min) / (max - min)) * chartHeight;\n  };\n\n  // Chart width calculations\n  const chartWidth = 100;\n  const barWidth = 40;\n  const gap = (chartWidth - barWidth * data.length) / (data.length + 1);\n  \n  // Colors based on type\n  const colors = {\n    weight: 'rgb(79, 70, 229)',\n    workouts: 'rgb(16, 185, 129)',\n    bodyFat: 'rgb(239, 68, 68)'\n  };\n\n  return (\n    <div className=\"bg-white p-4 rounded-lg shadow\">\n      <h3 className=\"text-lg font-semibold mb-4\">\n        {type === 'weight' ? 'Weight Progress' : \n         type === 'bodyFat' ? 'Body Fat Progress' : \n         'Completed Workouts'}\n      </h3>\n      \n      <div className=\"relative h-[220px] w-full\">\n        {/* Y-axis labels */}\n        <div className=\"absolute left-0 top-0 bottom-0 w-12 flex flex-col justify-between text-xs text-gray-500\">\n          <span>{Math.round(max)}{type === 'weight' ? 'kg' : type === 'bodyFat' ? '%' : ''}</span>\n          <span>{Math.round((max + min) / 2)}{type === 'weight' ? 'kg' : type === 'bodyFat' ? '%' : ''}</span>\n          <span>{Math.round(min)}{type === 'weight' ? 'kg' : type === 'bodyFat' ? '%' : ''}</span>\n        </div>\n        \n        {/* Chart area */}\n        <div className=\"absolute left-12 right-0 top-0 bottom-20\">\n          {/* Horizontal grid lines */}\n          <div className=\"absolute left-0 right-0 top-0 h-px bg-gray-200\"></div>\n          <div className=\"absolute left-0 right-0 top-1/2 h-px bg-gray-200\"></div>\n          <div className=\"absolute left-0 right-0 bottom-0 h-px bg-gray-200\"></div>\n          \n          {/* Bars */}\n          <svg className=\"absolute inset-0\" viewBox={`0 0 ${chartWidth} ${chartHeight}`}>\n            {data.map((value, index) => {\n              const x = gap + index * (barWidth + gap);\n              const barHeight = chartHeight - scale(value);\n              const y = chartHeight - barHeight;\n              \n              return (\n                <rect \n                  key={index}\n                  x={x}\n                  y={y}\n                  width={barWidth}\n                  height={barHeight}\n                  fill={colors[type]}\n                  rx={2}\n                />\n              );\n            })}\n          </svg>\n        </div>\n        \n        {/* X-axis labels */}\n        <div className=\"absolute left-12 right-0 bottom-0 h-20 flex justify-around items-start pt-2\">\n          {labels.map((label, index) => (\n            <div key={index} className=\"text-xs text-gray-500\">{label}</div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressChart;\n</boltAction>\n\n<boltAction type=\"file\" filePath=\"src/components/HeroSection.tsx\">\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ArrowRight } from 'lucide-react';\n\nconst HeroSection: React.FC = () => {\n  return (\n    <div className=\"relative bg-gray-900 overflow-hidden\">\n      {/* Background Image with Overlay */}\n      <div className=\"absolute inset-0\">\n        <img\n          src=\"https://images.unsplash.com/photo-1534438327276-14e5300c3a48?auto=format&fit=crop&q=80\"\n          alt=\"Gym background\"\n          className=\"w-full h-full object-cover\"\n        />\n        <div className=\"absolute inset-0 bg-black opacity-70\"></div>\n      </div>\n      \n      {/* Content */}\n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24 md:py-32\">\n        <div className=\"max-w-2xl\">\n          <h1 className=\"text-4xl font-extrabold tracking-tight text-white sm:text-5xl md:text-6xl\">\n            <span className=\"block\">Transform Your Body,</span>\n            <span className=\"block text-indigo-500\">Transform Your Life</span>\n          </h1>\n          <p className=\"mt-6 text-xl text-gray-300\">\n            Join FitFlex Gym to access premium workouts, expert trainers, and a supportive community. \n            Start your fitness journey today and achieve the results you've always wanted.\n          </p>\n          <div className=\"mt-10 flex space-x-4\">\n            <Link\n              to=\"/workouts\"\n              className=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transition-colors\"\n            >\n              Browse Workouts\n              <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Link>\n            <Link\n              to=\"/classes\"\n              className=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-indigo-600 bg-white hover:bg-gray-100 transition-colors\"\n            >\n              View Classes\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroSection;\n</boltAction>\n\n<boltAction type=\"file\" filePath=\"src/components/FeaturesSection.tsx\">\nimport React from 'react';\nimport { Dumbbell, Calendar, Users, LineChart, Award, Clock } from 'lucide-react';\n\nconst features = [\n  {\n    name: 'Expert Workouts',\n    description: 'Access professionally designed workout plans for all fitness levels, from beginners to advanced athletes.',\n    icon: Dumbbell,\n  },\n  {\n    name: 'Class Scheduling',\n    description: 'Book your spot in group fitness classes with our easy-to-use scheduling system.',\n    icon: Calendar,\n  },\n  {\n    name: 'Community Support',\n    description: 'Join a supportive community of like-minded individuals committed to health and fitness.',\n    icon: Users,\n  },\n  {\n    name: 'Progress Tracking',\n    description"
}